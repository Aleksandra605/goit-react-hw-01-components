{"version":3,"sources":["components/profile-comp/profile.module.css","components/friendsList-comp/friends.module.css","components/transactions-comp/transactions.module.css","components/statistics-comp/statistics.module.css","components/statistics-comp/statistics.js","components/profile-comp/Profile.js","components/friendsList-comp/friendsListItem.js","components/friendsList-comp/friendsList.js","components/transactions-comp/transactions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","title","stats","className","s","statistics","list","map","item","id","label","percentage","style","backgroundColor","Math","floor","random","toString","UserProfile","avatar","name","tag","location","profile","src","alt","quantity","followers","views","likes","FriendsListItem","isOnline","online","offline","width","FriendsList","friends","friendsList","friend","Transactions","items","transactionHistory","columnHeader","head","type","amount","currency","App","userData","statisticalData","friendsData","transactionData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13216fe5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3aPot\",\"stats\":\"profile_stats__1s6Rv\",\"avatar\":\"profile_avatar__3c6O5\",\"name\":\"profile_name__27bnN\",\"tag\":\"profile_tag__2iFrv\",\"location\":\"profile_location__1QrAU\",\"item\":\"profile_item__3VTf6\",\"label\":\"profile_label__N4QF0\",\"quantity\":\"profile_quantity__1ef4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"friends_friendsList__9tD7R\",\"friend\":\"friends_friend__18g1B\",\"avatar\":\"friends_avatar__Tra3i\",\"item\":\"friends_item__29utk\",\"online\":\"friends_online__2TjAl\",\"offline\":\"friends_offline__3PlGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"transactions_transactions__3rb1d\",\"columnHeader\":\"transactions_columnHeader__3Fv3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistics_list__3qiaz\",\"statistics\":\"statistics_statistics__1wYP9\",\"title\":\"statistics_title__15yaC\",\"item\":\"statistics_item__4C-Wr\",\"item-div\":\"statistics_item-div__3CYYW\"};","import PropTypes from 'prop-types';\r\nimport s from './statistics.module.css';\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title ? <h2 className={s.title}>{title}</h2> : null}\r\n      <ul className={s.list}>\r\n        {stats.map(item => {\r\n          const { id, label, percentage } = item;\r\n          return (\r\n            <li\r\n              className={s.item}\r\n              key={id}\r\n              style={{\r\n                backgroundColor:\r\n                  '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n              }}\r\n            >\r\n              <span className={s.label}>{label}</span>\r\n              <span className={s.percentage}>{percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  label: PropTypes.string,\r\n  key: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './profile.module.css';\r\n\r\nexport default function UserProfile({ avatar, name, tag, location, stats }) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Followers </span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Views </span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Likes </span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n","import s from './friends.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FriendsListItem({ isOnline, avatar, name }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={isOnline ? `${s.online}` : `${s.offline}`} />\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nFriendsListItem.propTypes = {\r\n  isOnline: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './friends.module.css';\r\nimport FriendsListItem from './friendsListItem';\r\n\r\nexport default function FriendsList({ friends }) {\r\n  return (\r\n    <ul className={s.friendsList}>\r\n      {friends.map(friend => {\r\n        const { isOnline, avatar, name } = friend;\r\n        return (\r\n          <FriendsListItem\r\n            isOnline={isOnline}\r\n            avatar={avatar}\r\n            name={name}\r\n            key={friend.id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n  key: PropTypes.number,\r\n};\r\n","import s from './transactions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Transactions({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr className={s.columnHeader}>\r\n          <th className={s.head}>Type</th>\r\n          <th className={s.head}>Amount</th>\r\n          <th className={s.head}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => {\r\n          const { id, type, amount, currency } = item;\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td className={s.amount}>{amount}</td>\r\n              <td className={s.currency}>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactions.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import './App.css';\r\nimport statisticalData from './components/statistics-comp/statistical-data.json';\r\nimport Statistics from './components/statistics-comp/statistics';\r\nimport Profile from './components/profile-comp/Profile';\r\nimport userData from './components/profile-comp/user-data.json';\r\nimport friendsData from './components/friendsList-comp/friends-data.json';\r\nimport FriendsList from './components/friendsList-comp/friendsList';\r\nimport transactionData from './components/transactions-comp/transactions-data.json';\r\nimport Transactions from './components/transactions-comp/transactions';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        avatar={userData.avatar}\r\n        name={userData.name}\r\n        tag={userData.tag}\r\n        location={userData.location}\r\n        stats={userData.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendsList friends={friendsData} />\r\n      <Transactions items={transactionData} />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n// import { App1, App2, App3, App4 } from './App';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App1 />\r\n//     <App2 />\r\n//     <App3 />\r\n//     <App4 />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}