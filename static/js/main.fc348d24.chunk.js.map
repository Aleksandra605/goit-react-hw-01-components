{"version":3,"sources":["component-1/profile.module.css","component-4/transactions.module.css","component-2/statistics.module.css","component-3/friends.module.css","component-2/statistics.js","component-1/Profile.js","component-3/friends.js","component-4/transactions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","statisticalData","className","s","statistics","title","list","map","item","id","label","percentage","style","backgroundColor","Math","floor","random","toString","UserProfile","avatar","name","tag","location","followers","views","likes","profile","src","alt","stats","quantity","FriendsList","friends","friendsList","friend","isOnline","online","offline","width","Transactions","items","transactionHistory","columnHeader","head","type","amount","currency","App","userData","friendsData","transactionData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc348d24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3ozY3\",\"stats\":\"profile_stats__2WPUN\",\"avatar\":\"profile_avatar__2PoPz\",\"name\":\"profile_name__BiJ0G\",\"tag\":\"profile_tag__J2ETg\",\"location\":\"profile_location__13U6E\",\"item\":\"profile_item__2TCW5\",\"label\":\"profile_label__SMJAq\",\"quantity\":\"profile_quantity__1k2wY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"transactions_transactions__306pU\",\"columnHeader\":\"transactions_columnHeader__2jitL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistics_list__2Y5IV\",\"statistics\":\"statistics_statistics__2SLme\",\"title\":\"statistics_title__3DVV-\",\"item\":\"statistics_item__3o2V_\",\"item-div\":\"statistics_item-div__14ZoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"friends_friendsList__YnnYn\",\"friend\":\"friends_friend__2qXnp\",\"avatar\":\"friends_avatar__1R3_W\",\"item\":\"friends_item__135nS\",\"online\":\"friends_online__32xBT\",\"offline\":\"friends_offline__JdCs1\"};","import PropTypes from 'prop-types';\r\nimport s from './statistics.module.css';\r\n\r\nexport default function Statistics({ statisticalData }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      <h2 className={s.title}>Upload stats</h2>\r\n      <ul className={s.list}>\r\n        {statisticalData.map(item => {\r\n          const { id, label, percentage } = item;\r\n          return (\r\n            <li\r\n              className={s.item}\r\n              key={id}\r\n              style={{\r\n                backgroundColor:\r\n                  '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n              }}\r\n            >\r\n              <span className={s.label}>{label}</span>\r\n              <span className={s.percentage}>{percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  label: PropTypes.string,\r\n  key: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './profile.module.css';\r\n\r\nexport default function UserProfile({\r\n  avatar,\r\n  name,\r\n  tag,\r\n  location,\r\n  followers,\r\n  views,\r\n  likes,\r\n}) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Followers </span>\r\n          <span className={s.quantity}>{followers}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Views </span>\r\n          <span className={s.quantity}>{views}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Likes </span>\r\n          <span className={s.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './friends.module.css';\r\n\r\nexport default function FriendsList({ friends }) {\r\n  return (\r\n    <ul className={s.friendsList}>\r\n      {friends.map(friend => {\r\n        const { id, isOnline, avatar, name } = friend;\r\n        return (\r\n          <li className={s.item} key={id}>\r\n            <span className={isOnline ? `${s.online}` : `${s.offline}`}></span>\r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n  id: PropTypes.number,\r\n  isOnline: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n};\r\n","import s from './transactions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Transactions({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr className={s.columnHeader}>\r\n          <th className={s.head}>Type</th>\r\n          <th className={s.head}>Amount</th>\r\n          <th className={s.head}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => {\r\n          const { id, type, amount, currency } = item;\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td className={s.amount}>{amount}</td>\r\n              <td className={s.currency}>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactions.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import './App.css';\r\nimport statisticalData from './component-2/statistical-data.json';\r\nimport Statistics from './component-2/statistics';\r\nimport Profile from './component-1/Profile';\r\nimport userData from './component-1/user-data.json';\r\nimport friendsData from './component-3/friends-data.json';\r\nimport FriendsList from './component-3/friends';\r\nimport transactionData from './component-4/transactions-data.json';\r\nimport Transactions from './component-4/transactions';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      {/* <Profile props={userData} /> */}\r\n      <Profile\r\n        avatar={userData.avatar}\r\n        name={userData.name}\r\n        tag={userData.tag}\r\n        location={userData.location}\r\n        followers={userData.stats.followers}\r\n        views={userData.stats.views}\r\n        likes={userData.stats.likes}\r\n      />\r\n      <Statistics statisticalData={statisticalData} />\r\n      <FriendsList friends={friendsData} />\r\n      <Transactions items={transactionData} />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n// import { App1, App2, App3, App4 } from './App';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App1 />\r\n//     <App2 />\r\n//     <App3 />\r\n//     <App4 />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}